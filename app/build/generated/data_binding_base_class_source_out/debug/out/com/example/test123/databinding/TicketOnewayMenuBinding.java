// Generated by view binder compiler. Do not edit!
package com.example.test123.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test123.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TicketOnewayMenuBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button jednoliniowyNormalny;

  @NonNull
  public final Button jednoliniowyUlgowy;

  @NonNull
  public final Button normalny30;

  @NonNull
  public final Button normalny60;

  @NonNull
  public final LinearLayout ticketOnewayMenuField;

  @NonNull
  public final Button ulgowy30;

  @NonNull
  public final Button ulgowy60;

  private TicketOnewayMenuBinding(@NonNull LinearLayout rootView,
      @NonNull Button jednoliniowyNormalny, @NonNull Button jednoliniowyUlgowy,
      @NonNull Button normalny30, @NonNull Button normalny60,
      @NonNull LinearLayout ticketOnewayMenuField, @NonNull Button ulgowy30,
      @NonNull Button ulgowy60) {
    this.rootView = rootView;
    this.jednoliniowyNormalny = jednoliniowyNormalny;
    this.jednoliniowyUlgowy = jednoliniowyUlgowy;
    this.normalny30 = normalny30;
    this.normalny60 = normalny60;
    this.ticketOnewayMenuField = ticketOnewayMenuField;
    this.ulgowy30 = ulgowy30;
    this.ulgowy60 = ulgowy60;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TicketOnewayMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TicketOnewayMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ticket_oneway_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TicketOnewayMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.jednoliniowy_normalny;
      Button jednoliniowyNormalny = ViewBindings.findChildViewById(rootView, id);
      if (jednoliniowyNormalny == null) {
        break missingId;
      }

      id = R.id.jednoliniowy_ulgowy;
      Button jednoliniowyUlgowy = ViewBindings.findChildViewById(rootView, id);
      if (jednoliniowyUlgowy == null) {
        break missingId;
      }

      id = R.id.normalny_30;
      Button normalny30 = ViewBindings.findChildViewById(rootView, id);
      if (normalny30 == null) {
        break missingId;
      }

      id = R.id.normalny_60;
      Button normalny60 = ViewBindings.findChildViewById(rootView, id);
      if (normalny60 == null) {
        break missingId;
      }

      LinearLayout ticketOnewayMenuField = (LinearLayout) rootView;

      id = R.id.ulgowy_30;
      Button ulgowy30 = ViewBindings.findChildViewById(rootView, id);
      if (ulgowy30 == null) {
        break missingId;
      }

      id = R.id.ulgowy_60;
      Button ulgowy60 = ViewBindings.findChildViewById(rootView, id);
      if (ulgowy60 == null) {
        break missingId;
      }

      return new TicketOnewayMenuBinding((LinearLayout) rootView, jednoliniowyNormalny,
          jednoliniowyUlgowy, normalny30, normalny60, ticketOnewayMenuField, ulgowy30, ulgowy60);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
